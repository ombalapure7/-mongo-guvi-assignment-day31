Display all documents inside a collection
> db.product.find().pretty()

Find all the information about each products
> db.product.find({}, { "product_name": 1, "product_material": 1, _id:0 });
NOTE: Mention 1 even the field is of type String/Number

Find the product price which are between 400 to 800
> db.product.find({$and:[{product_price:{$gte:400}},{product_price:{$lte:800}}]})

Find the product price which are not between 400 to 600
> db.product.find({"product_price":{ $not:{$gte:400.00, $lte:600.00} } })

Find the product name and product material of each products
> db.product.find({}, { "product_name": 1, "product_material": 1, _id:0 });

Find the product with a row id of 10
> db.product.find({"id": "10"});

Find only the product name and product material
> db.product.find({ "product_name": "Intelligent Fresh Chips", "product_material" : "Concrete" })

Find all products which contain the value of soft in product material 
> db.product.find({"product_material": {"$regex": "soft", $options: "i"}})
NOTE: User "$options": "i" for case insensitivity

Find products which contain product color indigo  and product price 492.00
> db.product.find({$and:[{"product_price":492.00},{"product_color":"indigo"}]})
NOTE: No results found